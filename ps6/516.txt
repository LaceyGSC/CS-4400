
================
	Original
================

void inner4(vec_ptr u, vec_ptr v, data_t *dest)
{
	long int i;
	int length = vec_length(u);
	data_t *udata = get_vec_start(u);
	data_t *vdata = get_vec_start(v);
	data_t sum = (data) 0;

	for (i = 0; i < length; i++) {
		sum = sum + udata[i] * vdata[i];
	}
	*dest = sum;
}


============
	5.16
============

void inner4(vec_ptr u, vec_ptr v, data_t *dest)
{
	long int i;
	int length = vec_length(u);
	int limit  = length - 3;
	data_t *udata = get_vec_start(u);
	data_t *vdata = get_vec_start(v);
	data_t sum = (data) 0;

	for (i = 0; i < limit; i += 4) {
		sum = (((sum + udata[i]   * vdata[i]) 
					 + udata[i+1] * vdata[i+1]) 
					 + udata[i+2] * vdata[i+2])
					 + udata[i+3] * vdata[i+3];
	}

	for (; i < length; i++) {
		sum = sum + udata[i] * vdata[i];
	}
	*dest = sum;
}


============
	5.17
============

void inner4(vec_ptr u, vec_ptr v, data_t *dest)
{
	long int i;
	int length = vec_length(u);
	int limit  = length - 3;
	data_t *udata = get_vec_start(u);
	data_t *vdata = get_vec_start(v);
	data_t sum0 = (data) 0;
	data_t sum1 = (data) 0;
	data_t sum2 = (data) 0;
	data_t sum3 = (data) 0;

	for (i = 0; i < limit; i += 4) {
		sum0 = sum0 + udata[i]   * vdata[i];
		sum1 = sum1 + udata[i+1] * vdata[i+1];
		sum2 = sum2 + udata[i+2] * vdata[i+2];
		sum3 = sum3 + udata[i+3] * vdata[i+3];
	}

	for (; i < length; i++) {
		sum0 = sum0 + udata[i] * vdata[i];
	}
	*dest = sum0 + sum1 + sum2 + sum3;
}


============
	5.18
============

void inner4(vec_ptr u, vec_ptr v, data_t *dest)
{
	long int i;
	int length = vec_length(u);
	int limit  = length - 3;
	data_t *udata = get_vec_start(u);
	data_t *vdata = get_vec_start(v);
	data_t sum = (data) 0;

	for (i = 0; i < limit; i += 4) {
		sum = sum + ((((udata[i]   * vdata[i]) 
					  + udata[i+1] * vdata[i+1]) 
					  + udata[i+2] * vdata[i+2])
					  + udata[i+3] * vdata[i+3]);
	}

	for (; i < length; i++) {
		sum = sum + udata[i] * vdata[i];
	}
	*dest = sum;
}



















